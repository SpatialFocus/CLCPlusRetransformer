name: Publish and Create Release

on:
  push:
    branches:
      - "!*"
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.400
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Publish
      run: dotnet publish ./src/ClcPlusRetransformer.Cli/ClcPlusRetransformer.Cli.csproj --configuration Release --output ./publish --runtime win-x64  --self-contained true -p:PublishTrimmed=true -p:PublishSingleFile=true
    - name: Get Release Number
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Zip publish result
      uses: edgarrc/action-7z@v1.0.4
      with:
        args: 7z a -tzip ./${{ env.RELEASE_VERSION }}.zip ./publish/*
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.RELEASE_VERSION }}.zip
        path: ./${{ env.RELEASE_VERSION }}.zip
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./${{ env.RELEASE_VERSION }}.zip
        asset_name: ${{ env.RELEASE_VERSION }}.zip
        asset_content_type: application/zip

  publish-geopackage:
    name: Build, Test, Pack & Release SpatialFocus.GeoPackage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build Project
      run: dotnet build -c Release
    - name: Publish NuGet
      id: publishNuGet
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
        # Filepath of the project to be packaged, relative to root of repository
        PROJECT_FILE_PATH: src/Geopackage/Geopackage.csproj
        # NuGet package id, used for version detection & defaults to project name
        PACKAGE_NAME: SpatialFocus.GeoPackage
        # API key to authenticate with NuGet server
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
        INCLUDE_SYMBOLS: true
        # Format of the git tag, [*] gets replaced with actual version
        TAG_FORMAT: geopackage_v_*
    - name: Persist NuGet artifact
      uses: actions/upload-artifact@v1
      if: ${{steps.publishNuGet.outputs.PACKAGE_NAME != ''}}
      with:
        name: ${{steps.publishNuGet.outputs.PACKAGE_NAME}}
        path: ${{steps.publishNuGet.outputs.PACKAGE_PATH}}
    - name: Persist SNuGet artifact
      uses: actions/upload-artifact@v1
      if: ${{steps.publishNuGet.outputs.SYMBOLS_PACKAGE_NAME != ''}}
      with:
        name: ${{steps.publishNuGet.outputs.SYMBOLS_PACKAGE_NAME}}
        path: ${{steps.publishNuGet.outputs.SYMBOLS_PACKAGE_PATH}}

  publish-geotoolbox:
    name: Build, Test, Pack & Release SpatialFocus.GeoToolbox
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build Project
      run: dotnet build -c Release
    - name: Publish NuGet
      id: publishNuGet
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
        # Filepath of the project to be packaged, relative to root of repository
        PROJECT_FILE_PATH: src/ClcPlusRetransformer.Core/ClcPlusRetransformer.Core.csproj
        # NuGet package id, used for version detection & defaults to project name
        PACKAGE_NAME: SpatialFocus.GeoToolbox
        # API key to authenticate with NuGet server
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
        INCLUDE_SYMBOLS: true
        # Format of the git tag, [*] gets replaced with actual version
        TAG_FORMAT: geotoolbox_v_*
    - name: Persist NuGet artifact
      uses: actions/upload-artifact@v1
      if: ${{steps.publishNuGet.outputs.PACKAGE_NAME != ''}}
      with:
        name: ${{steps.publishNuGet.outputs.PACKAGE_NAME}}
        path: ${{steps.publishNuGet.outputs.PACKAGE_PATH}}
    - name: Persist SNuGet artifact
      uses: actions/upload-artifact@v1
      if: ${{steps.publishNuGet.outputs.SYMBOLS_PACKAGE_NAME != ''}}
      with:
        name: ${{steps.publishNuGet.outputs.SYMBOLS_PACKAGE_NAME}}
        path: ${{steps.publishNuGet.outputs.SYMBOLS_PACKAGE_PATH}}
